2022-02-18     Thomas E. Janzen <janzentome@gmail.com>
        * SmusTrackEvent.cc: Fix whole notes with a zero denominator.
        This fixes missing whole note lengths in smustextmidi.
        * Makefile.am: lists of sources per program are fixed.
        * RhythmRational.cc: Fix print_rhythm to print 4 wholes as 4/1.
        * SmusTrackEvent.cc: Fix duration() not recognizing a whole note.

2022-02-17     Thomas E. Janzen <janzentome@gmail.com>
        * MidiMessages.cc: always reduce the rationals for rhythm when using 
        lazy mode in the miditext program.  This allows miditext to output 
        dotted notes in lazy mode output.
        * MidiMessages.{h,cc}, Midi.h, textmidi.l: create dynamics maps
        and use in textmidi and miditext; fix miditext issue of not 
        output dynamic markings.

2022-02-16     Thomas E. Janzen <janzentome@gmail.com>
        * writesmus.cc, writesmus.make: write for testing smustextmidi.
        * RhythmRational.cc: If rhythms are dotted, they have a numerator of 1,
        so we can use the abbreviated form (where a "1/4." (dotted quarter) note
        is "4." ).

2022-02-15     Thomas E. Janzen <janzentome@gmail.com>
        * TextmidiRational.{h,cc}: rename as RhythmRational.{h,cc}
        * Composer.cc, MidiMessages.cc, MidiMessages.h,
	NoteEvent.cc, NoteEvent.h, SmusTrackEvent.cc,
	SmusTrackEvent.h, Track.h, buildkit.bash, miditext.cc,
	rational_support.cc, rational_support.h, smustextmidi.cc:
        find all rhythm printing and make them use print_rhythm().

2022-02-15     Thomas E. Janzen <janzentome@gmail.com>
        * Track.{h,cc}, TextmidiRational.cc: Remove extra operator<<(rational)
        and edit the one in TextmidiRational to print 4 for 1/4 and 4/1 for 4/1.
        * MidiMessages.cc, SmusTrackEvent.h, miditext.cc, smustextmidi.cc, TextmidiRational.cc,
        NoteEvent.h, Track.h, TextmidiRational.h, MidiMessages.h, SmusTrackEvent.cc, Composer.cc:
        Also remove typedefs of TextmidiRational and just use the name TextmidiRational.

2022-02-14     Thomas E. Janzen <janzentome@gmail.com>
        * TextmidiRational.{h,cc}, SmusTrackEvent.cc, miditext.cc, MidiMessages.cc, Composer.cc:
        Complete work integrating TextmidiRational.

2022-02-13     Thomas E. Janzen <janzentome@gmail.com>
        * GeneralMIDI.h, SmusTrackEvent.h, SmusTrackEvent.cc, MidiMessages.cc, 
        * rational_support.{h,cc}, Track.h, TextmidiRational.{h,cc}, NoteEvent.h
        * Composer.cc, miditext.cc, smustextmidi.cc, MidiMessages.h, TextmidiRational.cc:
        Use pair init without template args; dispose of boost::rational and replace
        with TextmidiRational.  This stopped hard-to-track-down crashes of smustextmidi.

2022-02-12     Thomas E. Janzen <janzentome@gmail.com>
        * Composer.cc, Composer.h: use std::shuffle rather than random_shuffle, 
        now deleted from C++.
        * RandomDouble.h, RandomInt.h: add inclusion guards; to RandomInt.h add
        min() and max() member functions and a typedef of result_type
        so that std::shuffle can use them.
        * MIDIKeyString.cc: remove unnecessary double braces.

2022-02-11     Thomas E. Janzen <janzentome@gmail.com>
        * *.py: replace double quotes with single quotes

2022-02-11     Thomas E. Janzen <janzentome@gmail.com>
        * All files: update copyright to 2022.  Update version to 1.0.18.
        * textmidi.texi, textmidiformedit.texi: fix errors and update.

2022-02-10     Thomas E. Janzen <janzentome@gmail.com>
        * AllFormsWindow.py, KeyboardWindow.py: make keyboard smaller.

2022-02-08     Thomas E. Janzen <janzentome@gmail.com>
        * AllFormsWindow.py, VoiceWindow.py, textmidiformedit.py: remove widget variables where possible.
        Make spinboxes readonly where possible, only make writable temporarily when necessary.
        Fix a couple bugs discovered along the way.

2022-02-06     Thomas E. Janzen <janzentome@gmail.com>
        * AllFormsWindow.py, VoiceWindow.py: simplify usage to correct behavior as the voice number changes.
        Remove widget variables for Sine and Voice.  It makes the interface slower but 
        on Voice the Entry and Spinbox values would propagate to other voices for no reason.

2022-02-04     Thomas E. Janzen <janzentome@gmail.com>
        * GeneralMIDI.py, VoiceWindow.py: finish using General MIDI names in program entry.
        * KeyboardWindow.py, VoiceWindow.py, textmidiformedit.py, AllFormsWindow.py: set screen positions.
        * Fix an issue with widget update on Voice-program.  
        * Change colors on form plot but verify on Postscript output.

2022-02-04     Thomas E. Janzen <janzentome@gmail.com>
        * *.py: Make file names the same as the main window names.
        * GeneralMIDI.py: add General MIDI instruments for the spinbo in the voice window
        * VoiceWindow.py: Use GeneralMIDI iun the program spinbox
        * Composer.cc: refactor some code into local functions. 

2022-02-02     Thomas E. Janzen <janzentome@gmail.com>
        * voice.py, textmidiformedit.py, allforms.py: fix checkbox behavior;
        fix reads from the form XML file for min/max note len, name, len, pulse, down, same up;
        fix writes of voice pan.  Fix follow radio buttons write to file.
        Later continue to fix assignments.  Use get/set on StringVar; use delete/insert
        on changing Entry.  Except the min/max key seems to work setting the StringVar.
        * texmidicgm.texi: add descriptions of trackscramble and trackscrambleperiod

2022-02-01     Thomas E. Janzen <janzentome@gmail.com>
        * textmidiformedit.py: fix scale length error in saving XML Form files.
        * Voice.h, Composer.h, textmidicgm.cc, Composer.cc: Add track scrambling feature

2022-01-28     Thomas E. Janzen <janzentome@gmail.com>
        * Composer.cc, textmidi.l, MusicalForm.h, MusicalForm.cc: Use MaxDynamic
        and MinDynamic names where appropriate instead of magic numbers.

2022-01-17     Thomas E. Janzen <janzentome@gmail.com>
        * Most: Show correct version
        * *.texi: Correct spelling of Association

2022-01-07     Thomas E. Janzen <janzentome@gmail.com>
        * FormPlotWindow.png, KeyboardWindow.png, MusicalFormWindow.png, VoiceWindow.png: add images
        * textmidiformedit.texi: Add images of the GUI windows and more explanation.
        * textmidi.l, textmidi.texi: change default detache value to zero (0).

2022-01-06     Thomas E. Janzen <janzentome@gmail.com>
        * allforms.py, textmidiformedit.py, sine.py, voice.py, keyboard.py:
        Remove trailing spaces, make keyboard bigger, make middle C bolder on keyboard.

2022-01-04     Thomas E. Janzen <janzentome@gmail.com>
        * allforms.py, voice.py: make spinboxes use ButtonRelease-1 event and not focus out or
        decrement and increment.

2021-12-31     Thomas E. Janzen <janzentome@gmail.com>
        * allforms.py, form.py, sine.py, textmidiformedit.py, voice.py: Upgrade per "Modern Tkinter" by Roseman.

2021-11-20     Thomas E. Janzen <janzentome@gmail.com>

        * MusicalForm.cc: rewrite clampscale in fewer statements.
        * Composer.cc: remove unused objects.

2021-11-19     Thomas E. Janzen <janzentome@gmail.com>

        * textmidicgm.cc: cleanup usage of form file names; reported wrong name if verbose
        with a random form; move declarations closer to usage.
        * MusicalForm.h, MusicalForm.cc, textmidicgm.cc, textmidicgm.texi: add option 
        --clampscale to clamp the scale in each form to not exceed the union 
        of the voice ranges.

2021-10-14    Thomas E. Janzen <janzentome@gmail.com>

        * textmidiformedit.py: Fix mean curve inversion due to left-handed plotting 
        coordinates; add a save-postscript menu item; draw curves using create_polygon
        rather than create_line.

2021-10-13    Thomas E. Janzen <janzentome@gmail.com>

        * Scales.cc: Added the "Bs" to the Chromatic scale by textmidicgm.
        * Makefile.am, fixtempo.pl: Use /usr/bin/env instead of full paths for utilities.
        * textmidiformedit.texi: added documentation
        * textmidiformedit.py: added
        * allforms.py: added
        * form.py: added
        * sine.py: added
        * voice.py: added

2021-09-03    Thomas E. Janzen <janzentome@gmail.com>

	* MusicalForm.cc: clean up selection of MIDI program so that 2 different voices
        with the same channel won't set different programs.  This creates functions
        or single-valued relations: track->channel; channel->program.  These are
        in addition to the function channel->pan.

2021-09-02    Thomas E. Janzen <janzentome@gmail.com>

	* MusicalForm.cc: Change randomized Melody Probabilities to set silence to 0.125.
        Add comments describing Melody Probabilities as cumulative.  Increase the 
        possible number of voices in a random form to 24.
        * textmidicgm.texi:  Correct description of melody probabilities and update
        description of randomized melody probabilities (using the --random option).

2021-09-01    Thomas E. Janzen <janzentome@gmail.com>

	* Composer.cc, Midi.h: Rewrite distribution of pans in random forms.
        to spread for near the left to near the right.  The symptom was that
        idiophone-only random forms were bunching up the instruments way over 
        on the right.  Now a single channel score should put them in the center
        although the percussion instruments in TiMidity++ seem to be panned 
        stereo samples, so channel 10 is always centered.

2021-08-31    Thomas E. Janzen <janzentome@gmail.com>

	* Composer.cc: Remove the kluge that put a quiet note at the beginning of the
	tempo track to force generation of silent starts of tracks by TiMidity++.
	Loop time by using musical ratios instead of chrono time.  This results in
	more accurate alignment at the end, but the individual tracks can still
	be a measure longer than requested because they don't exceed the maximum
	time until they have generated the last note.

2021-08-30    Thomas E. Janzen <janzentome@gmail.com>

	* textmidi.l: fix accumulated time defect so that tracks that should be
	the same length in ticks are or at least only a tick off at the end.
	This can make very fast tracks a very different length, and was noticed
	with fast tracks written by textmidicgm.  This was an accumulating
	floating-point addition error, esp. wrt conversion to int types.
	* Composer.cc: Removed the forced percussion event (a kluge for
	separate track recording) part of the music time, so that it is not
	extra time.
	Trying to rationalize rhythm due to short tracks from textmidicgm.
	* NoteEvent.cc: If a musical rhythm is "1/D", just print the D.

2021-08-29    Thomas E. Janzen <janzentome@gmail.com>

	* main.cc: remove old block that checks if you would overwrite a file
	but leave check if --answer is set.

2021-08-26    Thomas E. Janzen <janzentome@gmail.com>

	* MusicalForm.cc: After a random form is created,
	remove scale notes that are too high or low for any or the
	General MIDI patches selected in random().  This avoids lots of repeated very 
	high or low notes when the pitch curve is beyond any instrument's range
	and the end of the scale.  This could still happen with small-range instruments.
	* textmidiform.py: add to tree.  Has a file widget, reads in the XML form file
	and draws the graph of the form.
	* MIDIKeystring.{cc,h}: Add CompareLowerNoteName for MusicalForm random().

2021-08-23    Thomas E. Janzen <janzentome@gmail.com>

	* textmidicgm.texi: correct description of random selection of channel to
	coerce channel 10 for idiophones.

2021-08-18    Thomas E. Janzen <janzentome@gmail.com>

	* textmidicgm.cc: handle boost xml serialization exceptions.

2021-08-13    Thomas E. Janzen <janzentome@gmail.com>

	* Composer.cc: rewrite if (pulse_per_rhythm) line 100 to if (!pulse_per_rhythm),
	to return it to its previous meaning of if (0 == pulse_per_rhythm)
	but not activating a bug.

2021-08-13    Thomas E. Janzen <janzentome@gmail.com>

	* Composer.cc: rewrite if (0 == pulse_per_rhythm) line 100 to if (pulse_per_rhythm);
	as a work-around for a crash due to a possible bug in boost::rational.

2021-08-12    Thomas E. Janzen <janzentome@gmail.com>

	* textmidi: Rewrite, upgrade, improve MIDI 1.1 Music support.  Use C++20.
	* miditext: Rewrite/rename from mididisasm.
	* smustextmidi: Rewrite of SMUSMIDI to output textmidi text.
	* textmidicgm: Rewrite from AlgoRhythms without a GUI; to produce textmidi text files; use C++20.
	Change output format to textmidi text output, which can be
	converted into MIDI Standard MIDI Files by textmidi.

2003    Thomas E. Janzen <janzentome@gmail.com>

	* smusmidi: Upgrade SMUSMIDI to work on linux/Intel x86 (make endian-agnostic)
	Remove extra NULL text events; fix key signatures.

2002-12-29 Thomas E. Janzen <janzentome@gmail.com>

	* textmidi: Improvements for use in creating a sequence of the Schumann Quintet,
	which was published on the Classical MIDI Archive.
	* mididisasm: First private version.

1999-09-18 Thomas E. Janzen <janzentome@gmail.com>

	* textmidi:  Initial private version.

1994-- Thomas E. Janzen <janzentome@gmail.com>

	* AlgoRhythms: Version 3.0 for Commodore Amiga computers.

1992-- Thomas E. Janzen <janzentome@gmail.com>

	* AlgoRhythms: Version 2.0, now textmidicgm.
	On Fred Fish Disk 606 for Commodore Amiga computers.

1992-- (approximately) Thomas E. Janzen <janzentome@gmail.com>

	* SMUSMIDI: Version 1.0 released on Fred Fish Disk 537 for the
	Commodore Amiga.

1990-- Thomas E. Janzen <janzentome@gmail.com>

	* AlgoRhythms: Initial revision 1.0
	on Fred Fish Disk 356 for Commodore Amiga computers.

